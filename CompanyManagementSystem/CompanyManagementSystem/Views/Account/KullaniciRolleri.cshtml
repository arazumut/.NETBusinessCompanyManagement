@{
    ViewData["Title"] = "Kullanıcı Rolleri";
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>@ViewData["Title"]</h1>
        <a asp-controller="Home" asp-action="Index" class="btn btn-secondary">
            <i class="bi bi-arrow-left"></i> Ana Sayfaya Dön
        </a>
    </div>

    <div class="alert alert-info">
        <i class="bi bi-info-circle"></i> Bu sayfada kullanıcılara rol ataması yapabilirsiniz. Değişiklikler anında kaydedilecektir.
    </div>

    <div class="card shadow">
        <div class="card-header bg-primary text-white">
            <h5 class="card-title mb-0">Kullanıcı Rolleri</h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="table-light">
                        <tr>
                            <th>Kullanıcı</th>
                            @foreach (var role in ViewBag.Roles)
                            {
                                <th class="text-center">@role</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in ViewBag.Users)
                        {
                            <tr>
                                <td>@user.Email</td>
                                @foreach (var role in ViewBag.Roles)
                                {
                                    <td class="text-center">
                                        <div class="form-check d-flex justify-content-center">
                                            <input 
                                                type="checkbox" 
                                                class="form-check-input role-checkbox" 
                                                data-user-id="@user.Id" 
                                                data-role="@role" 
                                                @(ViewBag.UserRoles[user.Id].Contains(role) ? "checked" : "")
                                                @(role == "Admin" && ViewBag.UserRoles[user.Id].Contains("Admin") && 
                                                  ((IEnumerable<Microsoft.AspNetCore.Identity.IdentityUser>)ViewBag.Users)
                                                  .Count(u => ((IDictionary<string, List<string>>)ViewBag.UserRoles)[u.Id].Contains("Admin")) <= 1 
                                                  ? "disabled" : "")
                                            />
                                        </div>
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    
    <div id="alert-container" class="mt-3">
        <!-- Alert messages will be shown here -->
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const roleCheckboxes = document.querySelectorAll('.role-checkbox');
            
            roleCheckboxes.forEach(checkbox => {
                checkbox.addEventListener('change', function() {
                    const userId = this.getAttribute('data-user-id');
                    const role = this.getAttribute('data-role');
                    const isChecked = this.checked;
                    
                    // jQuery ile AJAX isteği gönder
                    $.ajax({
                        url: '@Url.Action("KullaniciRolDegistir", "Account")',
                        type: 'POST',
                        data: {
                            userId: userId,
                            role: role,
                            isChecked: isChecked
                        },
                        headers: {
                            'RequestVerificationToken': $('input:hidden[name="__RequestVerificationToken"]').val()
                        },
                        success: function(data) {
                            if (data.success) {
                                showAlert('success', data.message);
                            } else {
                                showAlert('danger', data.message);
                                // Checkbox'ı geri çevir
                                checkbox.checked = !isChecked;
                            }
                        },
                        error: function(error) {
                            showAlert('danger', 'Bir hata oluştu: ' + error.statusText);
                            // Checkbox'ı geri çevir
                            checkbox.checked = !isChecked;
                        }
                    });
                });
            });
            
            function showAlert(type, message) {
                const alertContainer = document.getElementById('alert-container');
                const alertElement = document.createElement('div');
                alertElement.className = `alert alert-${type} alert-dismissible fade show`;
                alertElement.role = 'alert';
                
                alertElement.innerHTML = `
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                `;
                
                alertContainer.appendChild(alertElement);
                
                // 5 saniye sonra otomatik kapat
                setTimeout(() => {
                    alertElement.classList.remove('show');
                    setTimeout(() => alertElement.remove(), 300);
                }, 5000);
            }
        });
    </script>
} 